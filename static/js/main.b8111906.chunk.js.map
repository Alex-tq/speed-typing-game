{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","calculateWordCount","ref","onChange","e","value","target","disabled","onClick","current","focus","ReactDOM","render","document","getElementById"],"mappings":"sLAiEeA,MA/Df,WACI,IADW,EAGaC,mBAAS,IAHtB,mBAGJC,EAHI,KAGEC,EAHF,OAI+BF,mBAHpB,IADX,mBAIJG,EAJI,KAIWC,EAJX,OAK+BJ,oBAAS,GALxC,mBAKJK,EALI,KAKWC,EALX,OAMuBN,mBAAS,GANhC,mBAMJO,EANI,KAMOC,EANP,KAOLC,EAAaC,iBAAO,MAmC1B,OAVAC,qBAAU,WACHN,GAAiBF,EAAgB,EAChCS,YAAW,WACPR,GAAiB,SAAAS,GAAI,OAAIA,EAAO,OACjC,KACqB,IAAlBV,IATVG,GAAiB,GACjBE,EAfJ,SAA4BP,GAExB,OADiBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,OAa/BC,CAAmBlB,OAWjC,CAACE,EAAeE,IAGf,6BACI,qDACA,8BACIe,IAAKX,EACLY,SAtCZ,SAAsBC,GAAI,IACfC,EAASD,EAAEE,OAAXD,MACPrB,EAAQqB,IAqCAA,MAAOtB,EACPwB,UAAWpB,IAEf,+CAAqBF,GACrB,4BACIuB,QAlCZ,WACIpB,GAAiB,GACjBF,EApBkB,IAqBlBF,EAAQ,IACRO,EAAWkB,QAAQF,UAAW,EAC9BhB,EAAWkB,QAAQC,SA8BXH,SAAUpB,GAFd,SAMA,2CAAiBE,KCtD7BsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b8111906.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction App() {\r\n    const STARTING_TIME = 30;\r\n    \r\n    const [text, setText] = useState(\"\")\r\n    const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME)\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n    const [wordCount, setWordCount] = useState(0)\r\n    const textBoxRef = useRef(null)\r\n    \r\n    function handleChange(e) {\r\n        const {value} = e.target\r\n        setText(value)\r\n    }\r\n    \r\n    function calculateWordCount(text) {\r\n        const wordsArr = text.trim().split(\" \")\r\n        return wordsArr.filter(word => word !== \"\").length\r\n    }\r\n    \r\n    function startGame() {\r\n        setIsTimeRunning(true)\r\n        setTimeRemaining(STARTING_TIME)\r\n        setText(\"\")\r\n        textBoxRef.current.disabled = false\r\n        textBoxRef.current.focus()\r\n    }\r\n    \r\n    function endGame() {\r\n        setIsTimeRunning(false)\r\n        setWordCount(calculateWordCount(text))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isTimeRunning && timeRemaining > 0) {\r\n            setTimeout(() => {\r\n                setTimeRemaining(time => time - 1)\r\n            }, 1000)\r\n        } else if(timeRemaining === 0) {\r\n            endGame()\r\n        }\r\n    }, [timeRemaining, isTimeRunning])\r\n    \r\n    return (\r\n        <div>\r\n            <h1>How fast do you type?</h1>\r\n            <textarea\r\n                ref={textBoxRef}\r\n                onChange={handleChange}\r\n                value={text}\r\n                disabled={!isTimeRunning}\r\n            />\r\n            <h4>Time remaining: {timeRemaining}</h4>\r\n            <button \r\n                onClick={startGame}\r\n                disabled={isTimeRunning}\r\n            >\r\n                Start\r\n            </button>\r\n            <h1>Word count: {wordCount}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}